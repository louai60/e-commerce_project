syntax = "proto3";

package user;
option go_package = "github.com/louai60/e-commerce_project/backend/user-service/proto";

// User service definition
service UserService {
    // User CRUD operations
    rpc CreateUser (CreateUserRequest) returns (UserResponse);
    rpc GetUser (GetUserRequest) returns (UserResponse);
    rpc ListUsers (ListUsersRequest) returns (ListUsersResponse);
    rpc UpdateUser (UpdateUserRequest) returns (UserResponse);
    rpc DeleteUser (DeleteUserRequest) returns (DeleteResponse);
    rpc GetUserByEmail (GetUserByEmailRequest) returns (UserResponse);
    
    // Authentication
    rpc Login (LoginRequest) returns (LoginResponse);
    
    // Address operations
    rpc AddAddress (AddAddressRequest) returns (AddressResponse);
    rpc GetAddresses (GetAddressesRequest) returns (AddressListResponse);
    rpc UpdateAddress (UpdateAddressRequest) returns (AddressResponse);
    rpc DeleteAddress (DeleteAddressRequest) returns (DeleteResponse);
    
    // Payment method operations
    rpc AddPaymentMethod (AddPaymentMethodRequest) returns (PaymentMethodResponse);
    rpc GetPaymentMethods (GetPaymentMethodsRequest) returns (PaymentMethodListResponse);
    rpc UpdatePaymentMethod (UpdatePaymentMethodRequest) returns (PaymentMethodResponse);
    rpc DeletePaymentMethod (DeletePaymentMethodRequest) returns (DeleteResponse);
    
    // System
    rpc HealthCheck (HealthCheckRequest) returns (HealthCheckResponse);
}

// Base messages
message DeleteResponse {
    bool success = 1;
    string message = 2;
}

message DeleteUserResponse {
    bool success = 1;
    string message = 2;
}

// User related messages
message User {
    int64 user_id = 1;
    string email = 2;
    string username = 3;
    string first_name = 4;
    string last_name = 5;
    string phone_number = 6;
    string user_type = 7;
    string role = 8;
    string account_status = 9;
    bool email_verified = 10;
    bool phone_verified = 11;
    string created_at = 12;
    string updated_at = 13;
    string last_login = 14;
}

message CreateUserRequest {
    string email = 1;
    string username = 2;
    string password = 3;
    string first_name = 4;
    string last_name = 5;
    string phone_number = 6;
    string user_type = 7;
    string role = 8;
}

message UserResponse {
    User user = 1;
}

message GetUserRequest {
    int64 user_id = 1;
}

message GetUserByEmailRequest {
    string email = 1;
}

message ListUsersRequest {
    int32 page = 1;
    int32 limit = 2;
    string filter = 3;
}

message ListUsersResponse {
    repeated User users = 1;
    int32 total = 2;
    int32 page = 3;
    int32 limit = 4;
}

message UpdateUserRequest {
    int64 user_id = 1;
    string username = 2;
    string first_name = 3;
    string last_name = 4;
    string phone_number = 5;
}

message DeleteUserRequest {
    int64 user_id = 1;
}


// Login related messages
message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
    string refresh_token = 2;
    User user = 3;
}

// Address related messages
message Address {
    int64 address_id = 1;
    int64 user_id = 2;
    string address_type = 3;
    string street_address1 = 4;
    string street_address2 = 5;
    string city = 6;
    string state = 7;
    string postal_code = 8;
    string country = 9;
    bool is_default = 10;
    string created_at = 11;
    string updated_at = 12;
}

message AddAddressRequest {
    int64 user_id = 1;
    string address_type = 2;
    string street_address1 = 3;
    string street_address2 = 4;
    string city = 5;
    string state = 6;
    string postal_code = 7;
    string country = 8;
    bool is_default = 9;
}

message AddressResponse {
    Address address = 1;
}

message GetAddressesRequest {
    int64 user_id = 1;
}

message AddressListResponse {
    repeated Address addresses = 1;
}

message UpdateAddressRequest {
    int64 address_id = 1;
    int64 user_id = 2;
    string address_type = 3;
    string street_address1 = 4;
    string street_address2 = 5;
    string city = 6;
    string state = 7;
    string postal_code = 8;
    string country = 9;
    bool is_default = 10;
}

message DeleteAddressRequest {
    int64 address_id = 1;
    int64 user_id = 2;
}

// Payment method related messages
message PaymentMethod {
    int64 payment_method_id = 1;
    int64 user_id = 2;
    string payment_type = 3;
    string card_last_four = 4;
    string card_brand = 5;
    int32 expiration_month = 6;
    int32 expiration_year = 7;
    bool is_default = 8;
    string token = 9;
    string created_at = 10;
    string updated_at = 11;
}

message AddPaymentMethodRequest {
    int64 user_id = 1;
    string payment_type = 2;
    string card_last_four = 3;
    string card_brand = 4;
    int32 expiration_month = 5;
    int32 expiration_year = 6;
    bool is_default = 7;
    string token = 8;
}

message PaymentMethodResponse {
    PaymentMethod payment_method = 1;
}

message GetPaymentMethodsRequest {
    int64 user_id = 1;
}

message PaymentMethodListResponse {
    repeated PaymentMethod payment_methods = 1;
}

message UpdatePaymentMethodRequest {
    int64 payment_method_id = 1;
    int64 user_id = 2;
    int32 expiration_month = 3;
    int32 expiration_year = 4;
    bool is_default = 5;
}

message DeletePaymentMethodRequest {
    int64 payment_method_id = 1;
    int64 user_id = 2;
}

// Health check messages
message HealthCheckRequest {}

message HealthCheckResponse {
    string status = 1;
}
